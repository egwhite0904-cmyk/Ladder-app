const STORE_KEY="LADDER_APP_BASELINE";const PRESETS={sell:[0.025,0.045,0.07],buyback:[0.01,0.025,0.035],cycles:20};const $=(s,e=document)=>e.querySelector(s);const $all=(s,e=document)=>[...e.querySelectorAll(s)];const state={assets:load()??[]};function load(){try{return JSON.parse(localStorage.getItem(STORE_KEY)||"[]")}catch(e){return[]}}function save(){localStorage.setItem(STORE_KEY,JSON.stringify(state.assets));$("#ready").textContent="saved";setTimeout(()=>$("#ready").textContent="ready",800)}function render(){const h=$("#assets");h.innerHTML="";if(state.assets.length===0){const p=document.createElement("p");p.className="small";p.textContent="No assets yet. Add one above.";h.appendChild(p);return}state.assets.forEach((a,i)=>{h.appendChild(assetCard(a,i))})}function assetCard(asset,index){const w=document.createElement("div");w.className="asset";const header=document.createElement("div");header.className="asset-header";header.innerHTML=`<span class="asset-title">${asset.ticker.toUpperCase()}</span><span class="badge">${asset.rungs} rung(s)</span><span class="badge">start $${fmt(asset.start)}</span><div class="asset-controls"><button class="btn" data-cmd="toggle">Toggle</button><button class="btn danger" data-cmd="delete">Delete</button></div>`;w.appendChild(header);const body=document.createElement("div");body.className="asset-body";w.appendChild(body);for(let r=1;r<=asset.rungs;r++){const block=document.createElement("div");block.className="panel";block.innerHTML=`<h3 class="panel-title">${asset.ticker.toUpperCase()} â€” Rung ${r}<span class="badge">Sell +${(PRESETS.sell[r-1]*100).toFixed(1)}%</span><span class="badge">Buyback ${(PRESETS.buyback[r-1]*100).toFixed(1)}%</span></h3>${tableHTML(asset,r)}`;body.appendChild(block)}header.addEventListener("click",e=>{const cmd=e.target?.dataset?.cmd;if(cmd==="toggle"){body.classList.toggle("hidden")}else if(cmd==="delete"){if(confirm("Delete this ladder?")){state.assets.splice(index,1);save();render()}}});return w}function tableHTML(asset,rung){const rows=calcRows(asset.start,rung,PRESETS.cycles);const inputs=rows.map((row,i)=>{return`<tr><td>${i+1}</td><td class="cell"><input type="number" step="0.01" value="${row.buy.toFixed(2)}"></td><td class="cell"><input type="number" step="0.01" value="${row.sell.toFixed(2)}"></td><td>$ ${(row.sell-row.buy).toFixed(2)}</td><td class="cell"><input type="number" step="1" min="1" value="1"></td><td>$ ${(row.sell-row.buy).toFixed(2)}</td></tr>`}).join("");return`<div class="table-wrap"><table><thead><tr><th>#</th><th>Planned Buy</th><th>Planned Sell</th><th>Profit/Share</th><th>Planned Shares</th><th>Planned Total</th></tr></thead><tbody>${inputs}</tbody></table></div>`}function calcRows(start,rung,cycles){const sellPct=PRESETS.sell[rung-1];const bbPct=PRESETS.buyback[rung-1];const out=[];let buy=+start;for(let i=0;i<cycles;i++){const sell=buy*(1+sellPct);out.push({buy,sell});buy=sell*(1-bbPct)}return out}function fmt(n){return(+n).toFixed(2)}$("#addAsset").addEventListener("click",()=>{const ticker=$("#ticker").value.trim();const start=+$("#startPrice").value;const rungs=3;const defSh=+$("#defaultShares").value||1;if(!ticker||!start){alert("Enter ticker and start price.");return}const idx=state.assets.findIndex(a=>a.ticker.toLowerCase()===ticker.toLowerCase());const asset={ticker,start,rungs,defaultShares:defSh};if(idx>=0)state.assets[idx]=asset;else state.assets.push(asset);save();render()});$("#saveJson").addEventListener("click",()=>{const data=JSON.stringify(state.assets,null,2);const blob=new Blob([data],{type:"application/json"});const url=URL.createObjectURL(blob);const a=document.createElement("a");a.href=url;a.download="ladder_backup.json";document.body.appendChild(a);a.click();a.remove();URL.revokeObjectURL(url)});$("#restoreJson").addEventListener("click",()=>{const i=document.createElement("input");i.type="file";i.accept="application/json";i.onchange=e=>{const f=e.target.files[0];if(!f)return;const fr=new FileReader();fr.onload=()=>{try{state.assets=JSON.parse(fr.result);save();render()}catch(err){alert("Invalid JSON.")}};fr.readAsText(f)};i.click()});$("#clearAll").addEventListener("click",()=>{if(confirm("Clear all data on this device?")){state.assets=[];save();render()}});render();
